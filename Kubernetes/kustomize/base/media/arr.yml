apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sonarr
  name: sonarr
spec:
  selector:
    matchLabels:
      app: sonarr
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: sonarr
        sidecar.istio.io/inject: "true"
      annotations:
        consul.hashicorp.com/connect-service: sonarr
        consul.hashicorp.com/connect-inject: 'true'
        consul.hashicorp.com/transparent-proxy-exclude-outbound-ports: '9845,9078'
        consul.hashicorp.com/transparent-proxy: 'true'
    spec:
      # https://www.ibm.com/docs/de/spectrum-conductor/2.5.0?topic=instances-network-provisioning-docker-pods
      # https://stackoverflow.com/questions/49368047/what-is-the-equivalent-for-depends-on-in-kubernetes
      containers: 
        - name: sonarr
          image: lscr.io/linuxserver/sonarr:latest
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: time-zone
            - configMapRef:
                name: arr-user
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
          resources:
          ports: 
            - containerPort: 8989
          volumeMounts:
            - name: media-local-storage
              mountPath: /media/tv
              subPath: tv
            - name: media-local-storage
              mountPath: /media/downloads
              subPath: downloads
            - name: media-config-local-storage
              mountPath: /config
              subPath: sonarr
      
      serviceAccount: sonarr
      
      volumes:
        - name: media-config-local-storage
          persistentVolumeClaim:
            claimName: media-config-local-storage-claim
        - name: media-local-storage
          persistentVolumeClaim:
            claimName: media-local-storage-claim
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sonarr
  name: sonarr
spec:
  ports:
    - name: tcp-sonarr
      port: 9898
      targetPort: 8989
  selector:
    app: sonarr

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sonarr

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: radarr
  name: radarr
spec:
  selector:
    matchLabels:
      app: radarr
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: radarr
        sidecar.istio.io/inject: "true"
      annotations:
        consul.hashicorp.com/connect-service: radarr
        consul.hashicorp.com/connect-inject: 'true'
        consul.hashicorp.com/transparent-proxy-exclude-outbound-ports: '9845,9078'
        consul.hashicorp.com/transparent-proxy: 'true'
    spec:
      # https://www.ibm.com/docs/de/spectrum-conductor/2.5.0?topic=instances-network-provisioning-docker-pods
      # https://stackoverflow.com/questions/49368047/what-is-the-equivalent-for-depends-on-in-kubernetes
      containers: 
        - name: radarr
          image: lscr.io/linuxserver/radarr:latest
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: time-zone
            - configMapRef:
                name: arr-user
          resources:
            limits: 
              memory: 512M
          ports:
            - containerPort: 7878
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
          volumeMounts:
            - name: media-local-storage
              mountPath: /media/movies
              subPath: movies
            - name: media-local-storage
              mountPath: /media/downloads
              subPath: downloads
            - name: media-config-local-storage
              mountPath: /config
              subPath: radarr
      
      serviceAccount: radarr
      volumes:
        - name: media-config-local-storage
          persistentVolumeClaim:
            claimName: media-config-local-storage-claim
        - name: media-local-storage
          persistentVolumeClaim:
            claimName: media-local-storage-claim
      restartPolicy: Always


---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: radarr

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: radarr
  name: radarr
spec:
  ports:
    - name: tcp-radarr
      port: 7878
      targetPort: 7878
  selector:
    app: radarr



---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bazarr
  name: bazarr
spec:
  selector:
    matchLabels:
      app: bazarr
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: bazarr
        sidecar.istio.io/inject: "true"
      annotations:
        consul.hashicorp.com/connect-service: bazarr
        consul.hashicorp.com/connect-inject: 'true'
        consul.hashicorp.com/transparent-proxy-exclude-outbound-ports: '9845,9078'
        consul.hashicorp.com/transparent-proxy: 'true'
    spec:
      # https://www.ibm.com/docs/de/spectrum-conductor/2.5.0?topic=instances-network-provisioning-docker-pods
      # https://stackoverflow.com/questions/49368047/what-is-the-equivalent-for-depends-on-in-kubernetes
      containers:
        - name: bazarr
          image: lscr.io/linuxserver/bazarr:latest
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: time-zone
            - configMapRef:
                name: arr-user
          resources:
            limits: 
              memory: 512M
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
          ports:
            - containerPort: 6767
          volumeMounts:
            - name: media-local-storage
              mountPath: /media/tv
              subPath: tv
            - name: media-local-storage
              mountPath: /media/movie
              subPath: movies
            - name: media-config-local-storage
              mountPath: /config
              subPath: bazarr
      
      serviceAccount: bazarr
      
      volumes:
        - name: media-config-local-storage
          persistentVolumeClaim:
            claimName: media-config-local-storage-claim
        - name: media-local-storage
          persistentVolumeClaim:
            claimName: media-local-storage-claim
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: bazarr
  name: bazarr
spec:
  ports:
    - name: tcp-bazarr
      port: 7676
      targetPort: 6767
  selector:
    app: bazarr

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bazarr


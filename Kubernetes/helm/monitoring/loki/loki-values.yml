# https://artifacthub.io/packages/helm/grafana/loki?modal=values&path=loki.storage
# -- Deployment mode lets you specify how to deploy Loki.
# There are 3 options:
# - SingleBinary: Loki is deployed as a single binary, useful for small installs typically without HA, up to a few tens of GB/day.
# - SimpleScalable: Loki is deployed as 3 targets: read, write, and backend. Useful for medium installs easier to manage than distributed, up to a about 1TB/day.
# - Distributed: Loki is deployed as individual microservices. The most complicated but most capable, useful for large installs, typically over 1TB/day.
# There are also 2 additional modes used for migrating between deployment modes:
# - SingleBinary<->SimpleScalable: Migrate from SingleBinary to SimpleScalable (or vice versa)
# - SimpleScalable<->Distributed: Migrate from SimpleScalable to Distributed (or vice versa)
# Note: SimpleScalable and Distributed REQUIRE the use of object storage.
deploymentMode: SingleBinary

# Single Binary Seems just not to work  because loki frontend is affiliated with "read" pod, https://stackoverflow.com/questions/74947246/failed-to-enable-query-frontend-using-loki-simple-scalable-deployment-mode
# And to start monitoring the other Pods securely
# Need to set retention limit, https://grafana.com/docs/loki/latest/operations/storage/retention/


# Meant to fix processing request error: https://github.com/grafana/loki/issues/7649
structuredConfig:
  frontend:
    address: "loki-gateway.monitoring.svc.cluster.local"

frontend:
  address: "loki-gateway.monitoring.svc.cluster.local"

loki:
  commonConfig:
    replication_factor: 1
  
  storage:
    type: filesystem
    bucketNames:
      chunks: loki-chunks
      ruler: loki-ruler
      admin: loki-admin

  schemaConfig: 
    configs:
      - from: 2024-04-01
        object_store: filesystem
        store: tsdb
        schema: v13
        index:
          prefix: index_
          period: 24h
  

  auth_enabled: false

singleBinary:
  # replicas: 1
  nodeSelector:
    nodetype: monitor
  targetCPUUtilizationPercentage: 20
# queryFrontend:
#   replicas: 1
# queryScheduler:
#   replicas: 1

# adminApi:
#   nodeSelector:
#     nodetype: monitor # Set desired node with this label https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes/
#   replicas: 1
read:
  nodeSelector: 
    nodetype: monitor  
  replicas: 0
backend:
  nodeSelector:
    nodetype: monitor  
  replicas: 0
write:
  nodeSelector:
    nodetype: monitor 
  replicas: 0
# monitoring:
#   lokiCanary:
#     enabled: false
lokiCanary:
  enabled: false
gateway:
  enabled: true
  nodeSelector:
    nodetype: monitor
  
  # https://github.com/grafana/loki/issues/5963
  write:
    extraArgs:
      - -querier.engine.timeout=5m
      - -querier.query-timeout=5m
      - -server.http-read-timeout=5m
      - -server.http-write-timeout=5m
  read:
    extraArgs:
      - -querier.engine.timeout=5m
      - -querier.query-timeout=5m
      - -server.http-read-timeout=5m
      - -server.http-write-timeout=5m
test:
  enabled: false
selfMonitoring:
  enabled: true
resultsCache:
  allocatedMemory: 512
  targetCPUUtilizationPercentage: 5
  nodeSelector:
    nodetype: monitor 
chunksCache:
  allocatedMemory: 512
  targetCPUUtilizationPercentage: 5
  nodeSelector:
    nodetype: monitor 



